// User function template for C++

class Solution {
  public:
    int blackBox(vector<vector<int>> &mat , int mid){
        
        int count = 0;
        
        for(int i = 0 ; i < mat.size() ; i++){
            auto it = upper_bound(mat[i].begin() , mat[i].end() , mid);
            
            int finalAns = it - mat[i].begin();
            
            count += finalAns;
        }
        
        return count;
    }
    int median(vector<vector<int>> &mat) {
        // code here
        int low = INT_MAX;
        int high = INT_MIN;
        
        int row = mat.size();
        int col = mat[0].size();
        
        for(int i = 0 ; i < mat.size() ; i++){
            if(mat[i][0] < low){
                low = mat[i][0];
            }
            
            if(mat[i][col - 1] > high){
                high = mat[i][col - 1];
            }
        }
        
        int needed = (row * col) / 2;
        
        while(low <= high){
            int mid = (low + high) / 2;
            
            
            int smallerEquals = blackBox(mat , mid);
            
            if(smallerEquals <= needed){
                low = mid + 1;
            }
            
            else{
                high = mid - 1;
            }
        }
        
        return low;
    }
};
